apiVersion: v1
kind: Namespace
metadata:
  name: httpserver
  labels:
    name: httpserver
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpserver
  namespace: httpserver
spec:
  replicas: 2
  selector:
    matchLabels:
      app: httpserver
  template:
    metadata:
#      annotations:
#        prometheus.io/scrape: "true"
#        prometheus.io/port: "8077"
      labels:
        app: httpserver
    spec:
      containers:
        - name: httpserver
          image: chkinglee/httpserver:1.0.1
          ports:
            - containerPort: 8077
          env:
            - name: VERSION
              value: 1.0.1-a
          resources: # 资源限制
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 200m
              memory: 100Mi
          livenessProbe: # 探活
            httpGet:
              path: /healthz
              port: 8077
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 80
            successThreshold: 1
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe: # 就绪状态检查
            httpGet:
              path: /healthz
              port: 8077
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 50
            successThreshold: 1
            timeoutSeconds: 5
            failureThreshold: 3
          lifecycle:
            postStart: # 优雅启动
              exec:
                command: [ "/bin/sh", "-c", "echo postStart. HTTPSERVER >/proc/1/fd/1" ]
            preStop: # 优雅终止
              exec:
                command: [ "/bin/sh", "-c", "echo preSop. HTTPSERVER >/proc/1/fd/1 && sleep 60" ]
---

apiVersion: v1
kind: Service
metadata:
  name: httpserver
  namespace: httpserver
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8077"
spec:
  #  type: NodePort
  ports:
    - name: httpserver
      port: 8088 # 对外开放的服务端口
      targetPort: 8077 # 后方 pod 的服务端口
  selector:
    app: httpserver